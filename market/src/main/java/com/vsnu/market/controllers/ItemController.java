package com.vsnu.market.controllers;


import com.vsnu.market.dtos.ItemDto;
import com.vsnu.market.mappers.ItemMapper;
import com.vsnu.market.repositories.ItemRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.time.LocalDateTime;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path="/items") // This means URL's start with /demo (after Application path)
public class ItemController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ItemRepository itemRepository;


    @GetMapping(path="/all")
    public @ResponseBody List<ItemDto> getAllItems() {
        // This returns a JSON or XML with the users
        return ItemMapper.MAPPER.toItemDTOs(itemRepository.findAll());
    }

    @GetMapping(path="/{categoryId}")
    public @ResponseBody List<ItemDto> getItemsByCategory(@PathVariable("categoryId") Integer id) {
        // This returns a JSON or XML with the users
        return ItemMapper.MAPPER.toItemDTOs(itemRepository.findByCategoryId(id));
    }

    @GetMapping(path="/deals")
    public @ResponseBody List<ItemDto> getDiscountedItems() {
        // This returns a JSON or XML with the users
        return ItemMapper.MAPPER.toItemDTOs(itemRepository.findDiscountedItems(LocalDateTime.now()));
    }
}